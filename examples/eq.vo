'unwrap = fn ['pred, 'x, 'then, 'else] {
    'if-pred-then = fn ['xs, 'x] {
        pred(xs, { then(x) }, else)
    }
    pop(x, if-pred-then, else)
}

'if-tag = unwrap(if-tag)

'if-binding = unwrap(if-binding)

'if-app = fn ['v, 'then, 'else] {
    if-binding(v, else) {
        if-tag(v, else) {
            pop(v, then, else)
        }
    }
}

'== = rec(fn '== {
    fn ['x, 'y] {
        if-app(x, fn ['xs, 'x] {
            if-app(y, fn ['ys, 'y] {
                if-eq(x == y, True) { xs == ys } { False }
            }, {
                False
            })
        }, {
            if-nil(x) {
                if-nil(y) { True } { False }
            } {
                if-eq(x, y) { True } { False }
            }
        })
    }
})

[
    () == ()
    Foo == Bar
    Foo == Foo
    Foo(Foo) == Foo(Bar)
    Foo(Bar) == Foo(Bar)
]