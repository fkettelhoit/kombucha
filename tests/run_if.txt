__compare(Foo, Bar, { True }, { False })

(__compare
  Foo
  Bar
  { True }
  { False })

( ( ( ( =>
          =>
            =>
              =>
                ( if
                  3
                  2
                  1
                  0 )
        Foo )
      Bar )
    =>
      True )
  =>
    False )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00000)
00003: LoadVar(00001)
00004: LoadFn(00000)
00005: ApplyArgToFn
00006: LoadVar(00001)
00007: ApplyArgToFn
00008: ApplyArgToFn
00009:   Return
00010: PushString("False")
00011:   Return
00012: PushString("True")
00013:   Return
00014: LoadVar(00003)
00015: LoadVar(00002)
00016: LoadVar(00001)
00017: LoadVar(00000)
00018: Cmp
00019: ApplyArgToFn
00020:   Return
00021: LoadClosure { code: 00014, fvars: 00003 }
00022:   Return
00023: LoadClosure { code: 00021, fvars: 00002 }
00024:   Return
00025: LoadClosure { code: 00023, fvars: 00001 }
00026:   Return
00027: LoadClosure { code: 00010, fvars: 00000 }
00028: LoadClosure { code: 00012, fvars: 00000 }
00029: PushString("Bar")
00030: PushString("Foo")
00031: LoadClosure { code: 00025, fvars: 00000 }
00032: ApplyArgToFn
00033: ApplyArgToFn
00034: ApplyArgToFn
00035: ApplyArgToFn

False

---

'f = ('x => { __compare(x, Bar, { True }, { False }) }), f(Bar)

(=
  'f
  (=>
    'x
    { (__compare
        x
        Bar
        { True }
        { False }) }))
(f
  Bar)

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "f" )
    ( ( =>
          =>
            0
        "x" )
      =>
        ( ( ( ( =>
                  =>
                    =>
                      =>
                        ( if
                          3
                          2
                          1
                          0 )
                0 )
              Bar )
            =>
              True )
          =>
            False ) ) )
  =>
    ( 0
      Bar ) )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00000)
00003: LoadVar(00001)
00004: LoadFn(00000)
00005: ApplyArgToFn
00006: LoadVar(00001)
00007: ApplyArgToFn
00008: ApplyArgToFn
00009:   Return
00010: PushString("Bar")
00011: LoadVar(00000)
00012: ApplyArgToFn
00013:   Return
00014: PushString("False")
00015:   Return
00016: PushString("True")
00017:   Return
00018: LoadVar(00003)
00019: LoadVar(00002)
00020: LoadVar(00001)
00021: LoadVar(00000)
00022: Cmp
00023: ApplyArgToFn
00024:   Return
00025: LoadClosure { code: 00018, fvars: 00003 }
00026:   Return
00027: LoadClosure { code: 00025, fvars: 00002 }
00028:   Return
00029: LoadClosure { code: 00027, fvars: 00001 }
00030:   Return
00031: LoadClosure { code: 00014, fvars: 00000 }
00032: LoadClosure { code: 00016, fvars: 00000 }
00033: PushString("Bar")
00034: LoadVar(00000)
00035: LoadClosure { code: 00029, fvars: 00000 }
00036: ApplyArgToFn
00037: ApplyArgToFn
00038: ApplyArgToFn
00039: ApplyArgToFn
00040:   Return
00041: LoadVar(00000)
00042:   Return
00043: LoadClosure { code: 00041, fvars: 00000 }
00044:   Return
00045: LoadVar(00001)
00046: LoadVar(00000)
00047: ApplyArgToFn
00048:   Return
00049: LoadClosure { code: 00045, fvars: 00001 }
00050:   Return
00051: LoadClosure { code: 00049, fvars: 00000 }
00052:   Return
00053: LoadClosure { code: 00010, fvars: 00000 }
00054: LoadClosure { code: 00031, fvars: 00000 }
00055: PushString(""x"")
00056: LoadClosure { code: 00043, fvars: 00000 }
00057: ApplyArgToFn
00058: ApplyArgToFn
00059: PushString(""f"")
00060: LoadClosure { code: 00051, fvars: 00000 }
00061: ApplyArgToFn
00062: ApplyArgToFn
00063: ApplyArgToFn

True

---

'f = ('x => { __compare(x, Foo, { True }, { False }) }), Pair(f(Foo), f(Bar))

(=
  'f
  (=>
    'x
    { (__compare
        x
        Foo
        { True }
        { False }) }))
(Pair
  (f
    Foo)
  (f
    Bar))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "f" )
    ( ( =>
          =>
            0
        "x" )
      =>
        ( ( ( ( =>
                  =>
                    =>
                      =>
                        ( if
                          3
                          2
                          1
                          0 )
                0 )
              Foo )
            =>
              True )
          =>
            False ) ) )
  =>
    ( ( Pair
        ( 0
          Foo ) )
      ( 0
        Bar ) ) )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00000)
00003: LoadVar(00001)
00004: LoadFn(00000)
00005: ApplyArgToFn
00006: LoadVar(00001)
00007: ApplyArgToFn
00008: ApplyArgToFn
00009:   Return
00010: PushString("Foo")
00011: LoadVar(00000)
00012: ApplyArgToFn
00013: PushString("Pair")
00014: ApplyArgToFn
00015: PushString("Bar")
00016: LoadVar(00000)
00017: ApplyArgToFn
00018: ApplyFnToArg
00019:   Return
00020: PushString("False")
00021:   Return
00022: PushString("True")
00023:   Return
00024: LoadVar(00003)
00025: LoadVar(00002)
00026: LoadVar(00001)
00027: LoadVar(00000)
00028: Cmp
00029: ApplyArgToFn
00030:   Return
00031: LoadClosure { code: 00024, fvars: 00003 }
00032:   Return
00033: LoadClosure { code: 00031, fvars: 00002 }
00034:   Return
00035: LoadClosure { code: 00033, fvars: 00001 }
00036:   Return
00037: LoadClosure { code: 00020, fvars: 00000 }
00038: LoadClosure { code: 00022, fvars: 00000 }
00039: PushString("Foo")
00040: LoadVar(00000)
00041: LoadClosure { code: 00035, fvars: 00000 }
00042: ApplyArgToFn
00043: ApplyArgToFn
00044: ApplyArgToFn
00045: ApplyArgToFn
00046:   Return
00047: LoadVar(00000)
00048:   Return
00049: LoadClosure { code: 00047, fvars: 00000 }
00050:   Return
00051: LoadVar(00001)
00052: LoadVar(00000)
00053: ApplyArgToFn
00054:   Return
00055: LoadClosure { code: 00051, fvars: 00001 }
00056:   Return
00057: LoadClosure { code: 00055, fvars: 00000 }
00058:   Return
00059: LoadClosure { code: 00010, fvars: 00000 }
00060: LoadClosure { code: 00037, fvars: 00000 }
00061: PushString(""x"")
00062: LoadClosure { code: 00049, fvars: 00000 }
00063: ApplyArgToFn
00064: ApplyArgToFn
00065: PushString(""f"")
00066: LoadClosure { code: 00057, fvars: 00000 }
00067: ApplyArgToFn
00068: ApplyArgToFn
00069: ApplyArgToFn

Pair(True, False)