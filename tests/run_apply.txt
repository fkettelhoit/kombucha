Foo(Bar, Baz)

(Foo
  Bar
  Baz)

( ( Foo
    Bar )
  Baz )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: PushString("Foo")
00011: PushString("Bar")
00012: ApplyFnToArg
00013: PushString("Baz")
00014: ApplyFnToArg

Foo(Bar, Baz)

---

Foo(Bar, Baz(Qux))

(Foo
  Bar
  (Baz
    Qux))

( ( Foo
    Bar )
  ( Baz
    Qux ) )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: PushString("Foo")
00011: PushString("Bar")
00012: ApplyFnToArg
00013: PushString("Baz")
00014: PushString("Qux")
00015: ApplyFnToArg
00016: ApplyFnToArg

Foo(Bar, Baz(Qux))

---

Foo()

(Foo)

( Foo
  [] )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: PushString("Foo")
00011: PushString("")
00012: ApplyFnToArg

Foo()

---

Foo([], Bar)

(Foo
  (  )
  Bar)

( ( Foo
    [] )
  Bar )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: PushString("Foo")
00011: PushString("")
00012: ApplyFnToArg
00013: PushString("Bar")
00014: ApplyFnToArg

Foo([], Bar)

---

[A, B, C]

( A
  B
  C )

( ( ( []
      C )
    B )
  A )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: PushString("")
00011: PushString("C")
00012: ApplyFnToArg
00013: PushString("B")
00014: ApplyFnToArg
00015: PushString("A")
00016: ApplyFnToArg

[A, B, C]

---

[](C)(B)(A)

((((  )
  C)
  B)
  A)

( ( ( []
      C )
    B )
  A )

00000: LoadClosure { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: PushString("")
00011: PushString("C")
00012: ApplyFnToArg
00013: PushString("B")
00014: ApplyFnToArg
00015: PushString("A")
00016: ApplyFnToArg

[A, B, C]