(:acc => {
    __handle({
        effect!(Foo)
    }, effect!, :r => { :x => {
        r(acc(x))
    } })
})(List)

((=>
  :acc
  { (__handle
      { (effect!
          Foo) }
      effect!
      (=>
        :r
        { (=>
            :x
            { (r
                (acc
                  x)) }) })) })
  List)

( ( ( =>
        =>
          0
      "acc" )
    =>
      ( ( ( =>
              =>
                =>
                  ( try
                    2
                    1
                    0 )
            =>
              ( effect!
                Foo ) )
          effect! )
        ( ( =>
              =>
                0
            "r" )
          =>
            ( ( =>
                  =>
                    0
                "x" )
              =>
                ( 1
                  ( 2
                    0 ) ) ) ) ) )
  List )

00000: LoadFn { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00000)
00003: LoadVar(00001)
00004: LoadFn { code: 00000, fvars: 00000 }
00005: AppArgToFn
00006: LoadVar(00001)
00007: AppArgToFn
00008: AppArgToFn
00009:   Return
00010: LoadVar(00000)
00011:   Return
00012: LoadFn { code: 00010, fvars: 00000 }
00013:   Return
00014: LoadVar(00002)
00015: LoadVar(00001)
00016: LoadVar(00000)
00017: Try
00018: AppArgToFn
00019: Unwind
00020: AppArgToFn
00021: AppArgToFn
00022:   Return
00023: LoadFn { code: 00014, fvars: 00002 }
00024:   Return
00025: LoadFn { code: 00023, fvars: 00001 }
00026:   Return
00027: PushEffect("effect")
00028: PushString("Foo")
00029: AppFnToArg
00030:   Return
00031: LoadVar(00000)
00032:   Return
00033: LoadFn { code: 00031, fvars: 00000 }
00034:   Return
00035: LoadVar(00000)
00036:   Return
00037: LoadFn { code: 00035, fvars: 00000 }
00038:   Return
00039: LoadVar(00001)
00040: LoadVar(00002)
00041: LoadVar(00000)
00042: AppFnToArg
00043: AppFnToArg
00044:   Return
00045: LoadFn { code: 00037, fvars: 00000 }
00046: PushString(""x"")
00047: AppFnToArg
00048: LoadFn { code: 00039, fvars: 00002 }
00049: AppFnToArg
00050:   Return
00051: LoadFn { code: 00025, fvars: 00000 }
00052: LoadFn { code: 00027, fvars: 00000 }
00053: AppFnToArg
00054: PushEffect("effect")
00055: AppFnToArg
00056: LoadFn { code: 00033, fvars: 00000 }
00057: PushString(""r"")
00058: AppFnToArg
00059: LoadFn { code: 00045, fvars: 00001 }
00060: AppFnToArg
00061: AppFnToArg
00062:   Return
00063: LoadFn { code: 00012, fvars: 00000 }
00064: PushString(""acc"")
00065: AppFnToArg
00066: LoadFn { code: 00051, fvars: 00000 }
00067: AppFnToArg
00068: PushString("List")
00069: AppFnToArg
00070:   Return

List(Foo)

---

:with-toggle = (:loop ~> {
    :val => { :r => {
        __handle({
            r(val)
        }, toggle!, :r => { :arg => {
            __compare(val, True, {
              loop(False, r)
            }, {
              loop(True, r)
            })
        }})
    }}
})
with-toggle(False, { List(toggle!(), toggle!(), toggle!()) })

(=
  :with-toggle
  (~>
    :loop
    { (=>
        :val
        { (=>
            :r
            { (__handle
                { (r
                    val) }
                toggle!
                (=>
                  :r
                  { (=>
                      :arg
                      { (__compare
                          val
                          True
                          { (loop
                              False
                              r) }
                          { (loop
                              True
                              r) }) }) })) }) }) }))
(with-toggle
  False
  { (List
      (toggle!)
      (toggle!)
      (toggle!)) })

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "with-toggle" )
    ( ( =>
          =>
            ~>
              0
        "loop" )
      =>
        ( ( =>
              =>
                0
            "val" )
          =>
            ( ( =>
                  =>
                    0
                "r" )
              =>
                ( ( ( =>
                        =>
                          =>
                            ( try
                              2
                              1
                              0 )
                      =>
                        ( 1
                          2 ) )
                    toggle! )
                  ( ( =>
                        =>
                          0
                      "r" )
                    =>
                      ( ( =>
                            =>
                              0
                          "arg" )
                        =>
                          ( ( ( ( =>
                                    =>
                                      =>
                                        =>
                                          ( if
                                            3
                                            2
                                            1
                                            0 )
                                  3 )
                                True )
                              =>
                                ( ( 5
                                    False )
                                  2 ) )
                            =>
                              ( ( 5
                                  True )
                                2 ) ) ) ) ) ) ) ) )
  =>
    ( ( 0
        ( Value
          False ) )
      =>
        ( ( ( List
              ( toggle!
                [] ) )
            ( toggle!
              [] ) )
          ( toggle!
            [] ) ) ) )

00000: LoadFn { code: 00002, fvars: 00001 }
00001:   Return
00002: LoadVar(00000)
00003: LoadVar(00001)
00004: LoadFn { code: 00000, fvars: 00000 }
00005: AppArgToFn
00006: LoadVar(00001)
00007: AppArgToFn
00008: AppArgToFn
00009:   Return
00010: LoadVar(00000)
00011: LoadVar(00001)
00012: AppFnToArg
00013:   Return
00014: LoadFn { code: 00010, fvars: 00001 }
00015:   Return
00016: LoadFn { code: 00014, fvars: 00000 }
00017:   Return
00018: LoadVar(00000)
00019: LoadFn { code: 00000, fvars: 00000 }
00020: AppArgToFn
00021:   Return
00022: LoadFn { code: 00018, fvars: 00000 }
00023:   Return
00024: LoadVar(00000)
00025:   Return
00026: LoadFn { code: 00024, fvars: 00000 }
00027:   Return
00028: LoadVar(00000)
00029:   Return
00030: LoadFn { code: 00028, fvars: 00000 }
00031:   Return
00032: LoadVar(00002)
00033: LoadVar(00001)
00034: LoadVar(00000)
00035: Try
00036: AppArgToFn
00037: Unwind
00038: AppArgToFn
00039: AppArgToFn
00040:   Return
00041: LoadFn { code: 00032, fvars: 00002 }
00042:   Return
00043: LoadFn { code: 00041, fvars: 00001 }
00044:   Return
00045: LoadVar(00001)
00046: LoadVar(00002)
00047: AppFnToArg
00048:   Return
00049: LoadVar(00000)
00050:   Return
00051: LoadFn { code: 00049, fvars: 00000 }
00052:   Return
00053: LoadVar(00000)
00054:   Return
00055: LoadFn { code: 00053, fvars: 00000 }
00056:   Return
00057: LoadVar(00003)
00058: LoadVar(00002)
00059: LoadVar(00001)
00060: LoadVar(00000)
00061: Cmp
00062: AppArgToFn
00063:   Return
00064: LoadFn { code: 00057, fvars: 00003 }
00065:   Return
00066: LoadFn { code: 00064, fvars: 00002 }
00067:   Return
00068: LoadFn { code: 00066, fvars: 00001 }
00069:   Return
00070: LoadVar(00005)
00071: PushString("False")
00072: AppFnToArg
00073: LoadVar(00002)
00074: AppFnToArg
00075:   Return
00076: LoadVar(00005)
00077: PushString("True")
00078: AppFnToArg
00079: LoadVar(00002)
00080: AppFnToArg
00081:   Return
00082: LoadFn { code: 00068, fvars: 00000 }
00083: LoadVar(00003)
00084: AppFnToArg
00085: PushString("True")
00086: AppFnToArg
00087: LoadFn { code: 00070, fvars: 00005 }
00088: AppFnToArg
00089: LoadFn { code: 00076, fvars: 00005 }
00090: AppFnToArg
00091:   Return
00092: LoadFn { code: 00055, fvars: 00000 }
00093: PushString(""arg"")
00094: AppFnToArg
00095: LoadFn { code: 00082, fvars: 00004 }
00096: AppFnToArg
00097:   Return
00098: LoadFn { code: 00043, fvars: 00000 }
00099: LoadFn { code: 00045, fvars: 00002 }
00100: AppFnToArg
00101: PushEffect("toggle")
00102: AppFnToArg
00103: LoadFn { code: 00051, fvars: 00000 }
00104: PushString(""r"")
00105: AppFnToArg
00106: LoadFn { code: 00092, fvars: 00003 }
00107: AppFnToArg
00108: AppFnToArg
00109:   Return
00110: LoadFn { code: 00030, fvars: 00000 }
00111: PushString(""r"")
00112: AppFnToArg
00113: LoadFn { code: 00098, fvars: 00002 }
00114: AppFnToArg
00115:   Return
00116: LoadFn { code: 00026, fvars: 00000 }
00117: PushString(""val"")
00118: AppFnToArg
00119: LoadFn { code: 00110, fvars: 00001 }
00120: AppFnToArg
00121:   Return
00122: PushString("List")
00123: PushEffect("toggle")
00124: PushString("")
00125: AppFnToArg
00126: AppFnToArg
00127: PushEffect("toggle")
00128: PushString("")
00129: AppFnToArg
00130: AppFnToArg
00131: PushEffect("toggle")
00132: PushString("")
00133: AppFnToArg
00134: AppFnToArg
00135:   Return
00136: LoadVar(00000)
00137: PushString("Value")
00138: PushString("False")
00139: AppFnToArg
00140: AppFnToArg
00141: LoadFn { code: 00122, fvars: 00000 }
00142: AppFnToArg
00143:   Return
00144: LoadFn { code: 00016, fvars: 00000 }
00145: PushString(""with-toggle"")
00146: AppFnToArg
00147: LoadFn { code: 00022, fvars: 00000 }
00148: PushString(""loop"")
00149: AppFnToArg
00150: LoadFn { code: 00116, fvars: 00000 }
00151: AppFnToArg
00152: AppFnToArg
00153: LoadFn { code: 00136, fvars: 00000 }
00154: AppFnToArg
00155:   Return

List(True, False, True)