'f = ('f ~> { '_ => { Foo } }), f(Bar)

(=
  'f
  (~>
    'f
    { (=>
        '_
        { Foo }) }))
(f
  Bar)

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "f" )
    ( ( =>
          =>
            ~>
              0
        "f" )
      =>
        ( ( =>
              =>
                0
            "_" )
          =>
            Foo ) ) )
  =>
    ( 0
      Bar ) )

00000: LoadFn(00002, 00001)
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000, 00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: LoadVar(00000)
00011: LoadVar(00001)
00012: ApplyFnToArg
00013:   Return
00014: LoadFn(00010, 00001)
00015:   Return
00016: LoadFn(00014, 00000)
00017:   Return
00018: LoadVar(00000)
00019: LoadFn(00000, 00000)
00020: ApplyArgToFn
00021:   Return
00022: LoadFn(00018, 00000)
00023:   Return
00024: LoadVar(00000)
00025:   Return
00026: LoadFn(00024, 00000)
00027:   Return
00028: PushString("Foo")
00029:   Return
00030: LoadFn(00026, 00000)
00031: PushString(""_"")
00032: ApplyFnToArg
00033: LoadFn(00028, 00000)
00034: ApplyFnToArg
00035:   Return
00036: LoadVar(00000)
00037: PushString("Bar")
00038: ApplyFnToArg
00039:   Return
00040: LoadFn(00016, 00000)
00041: PushString(""f"")
00042: ApplyFnToArg
00043: LoadFn(00022, 00000)
00044: PushString(""f"")
00045: ApplyFnToArg
00046: LoadFn(00030, 00000)
00047: ApplyFnToArg
00048: ApplyFnToArg
00049: LoadFn(00036, 00000)
00050: ApplyFnToArg

Foo

---

'f = ('f ~> { 'x => { Foo(x) } }), f(Bar)

(=
  'f
  (~>
    'f
    { (=>
        'x
        { (Foo
            x) }) }))
(f
  Bar)

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "f" )
    ( ( =>
          =>
            ~>
              0
        "f" )
      =>
        ( ( =>
              =>
                0
            "x" )
          =>
            ( Foo
              0 ) ) ) )
  =>
    ( 0
      Bar ) )

00000: LoadFn(00002, 00001)
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000, 00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: LoadVar(00000)
00011: LoadVar(00001)
00012: ApplyFnToArg
00013:   Return
00014: LoadFn(00010, 00001)
00015:   Return
00016: LoadFn(00014, 00000)
00017:   Return
00018: LoadVar(00000)
00019: LoadFn(00000, 00000)
00020: ApplyArgToFn
00021:   Return
00022: LoadFn(00018, 00000)
00023:   Return
00024: LoadVar(00000)
00025:   Return
00026: LoadFn(00024, 00000)
00027:   Return
00028: PushString("Foo")
00029: LoadVar(00000)
00030: ApplyFnToArg
00031:   Return
00032: LoadFn(00026, 00000)
00033: PushString(""x"")
00034: ApplyFnToArg
00035: LoadFn(00028, 00000)
00036: ApplyFnToArg
00037:   Return
00038: LoadVar(00000)
00039: PushString("Bar")
00040: ApplyFnToArg
00041:   Return
00042: LoadFn(00016, 00000)
00043: PushString(""f"")
00044: ApplyFnToArg
00045: LoadFn(00022, 00000)
00046: PushString(""f"")
00047: ApplyFnToArg
00048: LoadFn(00032, 00000)
00049: ApplyFnToArg
00050: ApplyFnToArg
00051: LoadFn(00038, 00000)
00052: ApplyFnToArg

Foo(Bar)

---

'f = ('f ~> { 'xs => { pop(xs, 'xs => { '_ => { f(xs) } }, { xs }) } }), f(Foo(Bar, Baz))

(=
  'f
  (~>
    'f
    { (=>
        'xs
        { (pop
            xs
            (=>
              'xs
              { (=>
                  '_
                  { (f
                      xs) }) })
            { xs }) }) }))
(f
  (Foo
    Bar
    Baz))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "f" )
    ( ( =>
          =>
            ~>
              0
        "f" )
      =>
        ( ( =>
              =>
                0
            "xs" )
          =>
            ( ( ( =>
                    =>
                      =>
                        ( pop
                          2
                          1
                          0 )
                  0 )
                ( ( =>
                      =>
                        0
                    "xs" )
                  =>
                    ( ( =>
                          =>
                            0
                        "_" )
                      =>
                        ( 3
                          1 ) ) ) )
              =>
                1 ) ) ) )
  =>
    ( 0
      ( ( Foo
          Bar )
        Baz ) ) )

00000: LoadFn(00002, 00001)
00001:   Return
00002: LoadVar(00001)
00003: LoadFn(00000, 00000)
00004: LoadVar(00001)
00005: ApplyFnToArg
00006: ApplyFnToArg
00007: LoadVar(00000)
00008: ApplyFnToArg
00009:   Return
00010: LoadVar(00000)
00011: LoadVar(00001)
00012: ApplyFnToArg
00013:   Return
00014: LoadFn(00010, 00001)
00015:   Return
00016: LoadFn(00014, 00000)
00017:   Return
00018: LoadVar(00000)
00019: LoadFn(00000, 00000)
00020: ApplyArgToFn
00021:   Return
00022: LoadFn(00018, 00000)
00023:   Return
00024: LoadVar(00000)
00025:   Return
00026: LoadFn(00024, 00000)
00027:   Return
00028: LoadVar(00002)
00029: LoadVar(00001)
00030: LoadVar(00000)
00031: Unpack
00032: ApplyArgToFn
00033: ApplyArgToFn
00034:   Return
00035: LoadFn(00028, 00002)
00036:   Return
00037: LoadFn(00035, 00001)
00038:   Return
00039: LoadVar(00000)
00040:   Return
00041: LoadFn(00039, 00000)
00042:   Return
00043: LoadVar(00000)
00044:   Return
00045: LoadFn(00043, 00000)
00046:   Return
00047: LoadVar(00003)
00048: LoadVar(00001)
00049: ApplyFnToArg
00050:   Return
00051: LoadFn(00045, 00000)
00052: PushString(""_"")
00053: ApplyFnToArg
00054: LoadFn(00047, 00003)
00055: ApplyFnToArg
00056:   Return
00057: LoadVar(00001)
00058:   Return
00059: LoadFn(00037, 00000)
00060: LoadVar(00000)
00061: ApplyFnToArg
00062: LoadFn(00041, 00000)
00063: PushString(""xs"")
00064: ApplyFnToArg
00065: LoadFn(00051, 00002)
00066: ApplyFnToArg
00067: ApplyFnToArg
00068: LoadFn(00057, 00001)
00069: ApplyFnToArg
00070:   Return
00071: LoadFn(00026, 00000)
00072: PushString(""xs"")
00073: ApplyFnToArg
00074: LoadFn(00059, 00001)
00075: ApplyFnToArg
00076:   Return
00077: LoadVar(00000)
00078: PushString("Foo")
00079: PushString("Bar")
00080: ApplyFnToArg
00081: PushString("Baz")
00082: ApplyFnToArg
00083: ApplyFnToArg
00084:   Return
00085: LoadFn(00016, 00000)
00086: PushString(""f"")
00087: ApplyFnToArg
00088: LoadFn(00022, 00000)
00089: PushString(""f"")
00090: ApplyFnToArg
00091: LoadFn(00071, 00000)
00092: ApplyFnToArg
00093: ApplyFnToArg
00094: LoadFn(00077, 00000)
00095: ApplyFnToArg

Foo