(['x, '_] => { x })(Foo, {})

((=>
  ( 'x
    '_ )
  { x })
  Foo
  {  })

( ( ( ( =>
          =>
            0
        ( ( []
            "_" )
          "x" ) )
      =>
        =>
          1 )
    ( Value
      Foo ) )
  =>
    [] )

00000: PushVar(00000)
00001:   Return
00002: PushFn(00000, 00000)
00003:   Return
00004: PushVar(00001)
00005:   Return
00006: PushFn(00004, 00001)
00007:   Return
00008: PushString("")
00009:   Return
00010: PushFn(00002, 00000)
00011: PushString("")
00012: PushString(""_"")
00013: Swap(00002)
00014: Apply
00015: PushString(""x"")
00016: Swap(00002)
00017: Apply
00018: Swap(00002)
00019: Apply
00020: PushFn(00006, 00000)
00021: Swap(00002)
00022: Apply
00023: PushString("Value")
00024: PushString("Foo")
00025: Swap(00002)
00026: Apply
00027: Swap(00002)
00028: Apply
00029: PushFn(00008, 00000)
00030: Swap(00002)
00031: Apply

Value(Foo)

---

(['x, '_] => { x })('binding, {})

((=>
  ( 'x
    '_ )
  { x })
  'binding
  {  })

( ( ( ( =>
          =>
            0
        ( ( []
            "_" )
          "x" ) )
      =>
        =>
          1 )
    ( Binding
      "binding" ) )
  =>
    [] )

00000: PushVar(00000)
00001:   Return
00002: PushFn(00000, 00000)
00003:   Return
00004: PushVar(00001)
00005:   Return
00006: PushFn(00004, 00001)
00007:   Return
00008: PushString("")
00009:   Return
00010: PushFn(00002, 00000)
00011: PushString("")
00012: PushString(""_"")
00013: Swap(00002)
00014: Apply
00015: PushString(""x"")
00016: Swap(00002)
00017: Apply
00018: Swap(00002)
00019: Apply
00020: PushFn(00006, 00000)
00021: Swap(00002)
00022: Apply
00023: PushString("Binding")
00024: PushString(""binding"")
00025: Swap(00002)
00026: Apply
00027: Swap(00002)
00028: Apply
00029: PushFn(00008, 00000)
00030: Swap(00002)
00031: Apply

Binding("binding")

---

(['x, '_] => { x })(Foo(Bar, Baz), {})

((=>
  ( 'x
    '_ )
  { x })
  (Foo
    Bar
    Baz)
  {  })

( ( ( ( =>
          =>
            0
        ( ( []
            "_" )
          "x" ) )
      =>
        =>
          1 )
    ( Value
      ( ( Foo
          Bar )
        Baz ) ) )
  =>
    [] )

00000: PushVar(00000)
00001:   Return
00002: PushFn(00000, 00000)
00003:   Return
00004: PushVar(00001)
00005:   Return
00006: PushFn(00004, 00001)
00007:   Return
00008: PushString("")
00009:   Return
00010: PushFn(00002, 00000)
00011: PushString("")
00012: PushString(""_"")
00013: Swap(00002)
00014: Apply
00015: PushString(""x"")
00016: Swap(00002)
00017: Apply
00018: Swap(00002)
00019: Apply
00020: PushFn(00006, 00000)
00021: Swap(00002)
00022: Apply
00023: PushString("Value")
00024: PushString("Foo")
00025: PushString("Bar")
00026: Swap(00002)
00027: Apply
00028: PushString("Baz")
00029: Swap(00002)
00030: Apply
00031: Swap(00002)
00032: Apply
00033: Swap(00002)
00034: Apply
00035: PushFn(00008, 00000)
00036: Swap(00002)
00037: Apply

Value(Foo(Bar, Baz))

---

(['x, '_] => { x })(Foo(Bar, 'baz), {})

((=>
  ( 'x
    '_ )
  { x })
  (Foo
    Bar
    'baz)
  {  })

( ( ( ( =>
          =>
            0
        ( ( []
            "_" )
          "x" ) )
      =>
        =>
          1 )
    ( Compound
      ( ( Foo
          ( Value
            Bar ) )
        ( Binding
          "baz" ) ) ) )
  =>
    [] )

00000: PushVar(00000)
00001:   Return
00002: PushFn(00000, 00000)
00003:   Return
00004: PushVar(00001)
00005:   Return
00006: PushFn(00004, 00001)
00007:   Return
00008: PushString("")
00009:   Return
00010: PushFn(00002, 00000)
00011: PushString("")
00012: PushString(""_"")
00013: Swap(00002)
00014: Apply
00015: PushString(""x"")
00016: Swap(00002)
00017: Apply
00018: Swap(00002)
00019: Apply
00020: PushFn(00006, 00000)
00021: Swap(00002)
00022: Apply
00023: PushString("Compound")
00024: PushString("Foo")
00025: PushString("Value")
00026: PushString("Bar")
00027: Swap(00002)
00028: Apply
00029: Swap(00002)
00030: Apply
00031: PushString("Binding")
00032: PushString(""baz"")
00033: Swap(00002)
00034: Apply
00035: Swap(00002)
00036: Apply
00037: Swap(00002)
00038: Apply
00039: Swap(00002)
00040: Apply
00041: PushFn(00008, 00000)
00042: Swap(00002)
00043: Apply

Compound(Foo(Value(Bar), Binding("baz")))

---

(['x, '_] => { x })('foo(Bar, 'baz), {})

((=>
  ( 'x
    '_ )
  { x })
  ('foo
    Bar
    'baz)
  {  })

( ( ( ( =>
          =>
            0
        ( ( []
            "_" )
          "x" ) )
      =>
        =>
          1 )
    ( Template
      ( ( "foo"
          ( Value
            Bar ) )
        ( Binding
          "baz" ) ) ) )
  =>
    =>
      [] )

00000: PushVar(00000)
00001:   Return
00002: PushFn(00000, 00000)
00003:   Return
00004: PushVar(00001)
00005:   Return
00006: PushFn(00004, 00001)
00007:   Return
00008: PushString("")
00009:   Return
00010: PushFn(00008, 00000)
00011:   Return
00012: PushFn(00002, 00000)
00013: PushString("")
00014: PushString(""_"")
00015: Swap(00002)
00016: Apply
00017: PushString(""x"")
00018: Swap(00002)
00019: Apply
00020: Swap(00002)
00021: Apply
00022: PushFn(00006, 00000)
00023: Swap(00002)
00024: Apply
00025: PushString("Template")
00026: PushString(""foo"")
00027: PushString("Value")
00028: PushString("Bar")
00029: Swap(00002)
00030: Apply
00031: Swap(00002)
00032: Apply
00033: PushString("Binding")
00034: PushString(""baz"")
00035: Swap(00002)
00036: Apply
00037: Swap(00002)
00038: Apply
00039: Swap(00002)
00040: Apply
00041: Swap(00002)
00042: Apply
00043: PushFn(00010, 00000)
00044: Swap(00002)
00045: Apply

Template("foo"(Value(Bar), Binding("baz")))