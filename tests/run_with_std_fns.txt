'map = ('map ~> { ('f, 'xs) => {
    pop(xs, ('xs, 'x) => {
        map(f, xs)(f(x))
    }, {
        xs
    })
}})
map('x => { Foo(x) }, List(A, B, C))

(=
  'map
  (~>
    'map
    { (=>
        (
          'f
          'xs)
        { (pop
            xs
            (=>
              (
                'xs
                'x)
              { ((map
                  f
                  xs)
                  (f
                    x)) })
            { xs }) }) }))
(map
  (=>
    'x
    { (Foo
        x) })
  (List
    A
    B
    C))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "map" )
    ( ( =>
          =>
            ~>
              0
        "map" )
      =>
        ( ( =>
              =>
                0
            ( ( ""
                "f" )
              "xs" ) )
          =>
            =>
              ( ( ( =>
                      =>
                        =>
                          ( pop
                            2
                            1
                            0 )
                    0 )
                  ( ( =>
                        =>
                          0
                      ( ( ""
                          "xs" )
                        "x" ) )
                    =>
                      =>
                        ( ( ( 4
                              3 )
                            1 )
                          ( 3
                            0 ) ) ) )
                =>
                  1 ) ) ) )
  =>
    ( ( 0
        ( ( =>
              =>
                0
            "x" )
          =>
            ( "Foo"
              0 ) ) )
      ( ( ( "List"
            "A" )
          "B" )
        "C" ) ) )

00000: PushVar(00000)
00001: PushVar(00001)
00002: Swap(00002)
00003: Apply
00004:   Return
00005: PushFn(00000, 00001)
00006:   Return
00007: PushFn(00005, 00000)
00008:   Return
00009: PushVar(00000)
00010: Rec
00011:   Return
00012: PushFn(00009, 00000)
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00002)
00019: PushVar(00001)
00020: PushVar(00000)
00021: Swap(00003)
00022: Pop
00023: Apply
00024: Apply
00025:   Return
00026: PushFn(00018, 00002)
00027:   Return
00028: PushFn(00026, 00001)
00029:   Return
00030: PushVar(00000)
00031:   Return
00032: PushFn(00030, 00000)
00033:   Return
00034: PushVar(00004)
00035: PushVar(00003)
00036: Swap(00002)
00037: Apply
00038: PushVar(00001)
00039: Swap(00002)
00040: Apply
00041: PushVar(00003)
00042: PushVar(00000)
00043: Swap(00002)
00044: Apply
00045: Swap(00002)
00046: Apply
00047:   Return
00048: PushFn(00034, 00004)
00049:   Return
00050: PushVar(00001)
00051:   Return
00052: PushFn(00028, 00000)
00053: PushVar(00000)
00054: Swap(00002)
00055: Apply
00056: PushFn(00032, 00000)
00057: PushString("")
00058: PushString("xs")
00059: Swap(00002)
00060: Apply
00061: PushString("x")
00062: Swap(00002)
00063: Apply
00064: Swap(00002)
00065: Apply
00066: PushFn(00048, 00003)
00067: Swap(00002)
00068: Apply
00069: Swap(00002)
00070: Apply
00071: PushFn(00050, 00001)
00072: Swap(00002)
00073: Apply
00074:   Return
00075: PushFn(00052, 00002)
00076:   Return
00077: PushFn(00016, 00000)
00078: PushString("")
00079: PushString("f")
00080: Swap(00002)
00081: Apply
00082: PushString("xs")
00083: Swap(00002)
00084: Apply
00085: Swap(00002)
00086: Apply
00087: PushFn(00075, 00001)
00088: Swap(00002)
00089: Apply
00090:   Return
00091: PushVar(00000)
00092:   Return
00093: PushFn(00091, 00000)
00094:   Return
00095: PushString("Foo")
00096: PushVar(00000)
00097: Swap(00002)
00098: Apply
00099:   Return
00100: PushVar(00000)
00101: PushFn(00093, 00000)
00102: PushString("x")
00103: Swap(00002)
00104: Apply
00105: PushFn(00095, 00000)
00106: Swap(00002)
00107: Apply
00108: Swap(00002)
00109: Apply
00110: PushString("List")
00111: PushString("A")
00112: Swap(00002)
00113: Apply
00114: PushString("B")
00115: Swap(00002)
00116: Apply
00117: PushString("C")
00118: Swap(00002)
00119: Apply
00120: Swap(00002)
00121: Apply
00122:   Return
00123: PushFn(00007, 00000)
00124: PushString("map")
00125: Swap(00002)
00126: Apply
00127: PushFn(00012, 00000)
00128: PushString("map")
00129: Swap(00002)
00130: Apply
00131: PushFn(00077, 00000)
00132: Swap(00002)
00133: Apply
00134: Swap(00002)
00135: Apply
00136: PushFn(00100, 00000)
00137: Swap(00002)
00138: Apply

List(Foo(A), Foo(B), Foo(C))

---

'fold = ('fold ~> { ('f, 'acc, 'xs) => {
    pop(xs, ('xs, 'x) => {
        fold(f, f(acc, x), xs)
    }, {
        acc
    })
}})
fold(('acc, 'x) => { acc(x) }, List, List(A, B, C))

(=
  'fold
  (~>
    'fold
    { (=>
        (
          'f
          'acc
          'xs)
        { (pop
            xs
            (=>
              (
                'xs
                'x)
              { (fold
                  f
                  (f
                    acc
                    x)
                  xs) })
            { acc }) }) }))
(fold
  (=>
    (
      'acc
      'x)
    { (acc
        x) })
  List
  (List
    A
    B
    C))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "fold" )
    ( ( =>
          =>
            ~>
              0
        "fold" )
      =>
        ( ( =>
              =>
                0
            ( ( ( ""
                  "f" )
                "acc" )
              "xs" ) )
          =>
            =>
              =>
                ( ( ( =>
                        =>
                          =>
                            ( pop
                              2
                              1
                              0 )
                      0 )
                    ( ( =>
                          =>
                            0
                        ( ( ""
                            "xs" )
                          "x" ) )
                      =>
                        =>
                          ( ( ( 5
                                4 )
                              ( ( 4
                                  3 )
                                0 ) )
                            1 ) ) )
                  =>
                    2 ) ) ) )
  =>
    ( ( ( 0
          ( ( =>
                =>
                  0
              ( ( ""
                  "acc" )
                "x" ) )
            =>
              =>
                ( 1
                  0 ) ) )
        "List" )
      ( ( ( "List"
            "A" )
          "B" )
        "C" ) ) )

00000: PushVar(00000)
00001: PushVar(00001)
00002: Swap(00002)
00003: Apply
00004:   Return
00005: PushFn(00000, 00001)
00006:   Return
00007: PushFn(00005, 00000)
00008:   Return
00009: PushVar(00000)
00010: Rec
00011:   Return
00012: PushFn(00009, 00000)
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00002)
00019: PushVar(00001)
00020: PushVar(00000)
00021: Swap(00003)
00022: Pop
00023: Apply
00024: Apply
00025:   Return
00026: PushFn(00018, 00002)
00027:   Return
00028: PushFn(00026, 00001)
00029:   Return
00030: PushVar(00000)
00031:   Return
00032: PushFn(00030, 00000)
00033:   Return
00034: PushVar(00005)
00035: PushVar(00004)
00036: Swap(00002)
00037: Apply
00038: PushVar(00004)
00039: PushVar(00003)
00040: Swap(00002)
00041: Apply
00042: PushVar(00000)
00043: Swap(00002)
00044: Apply
00045: Swap(00002)
00046: Apply
00047: PushVar(00001)
00048: Swap(00002)
00049: Apply
00050:   Return
00051: PushFn(00034, 00005)
00052:   Return
00053: PushVar(00002)
00054:   Return
00055: PushFn(00028, 00000)
00056: PushVar(00000)
00057: Swap(00002)
00058: Apply
00059: PushFn(00032, 00000)
00060: PushString("")
00061: PushString("xs")
00062: Swap(00002)
00063: Apply
00064: PushString("x")
00065: Swap(00002)
00066: Apply
00067: Swap(00002)
00068: Apply
00069: PushFn(00051, 00004)
00070: Swap(00002)
00071: Apply
00072: Swap(00002)
00073: Apply
00074: PushFn(00053, 00002)
00075: Swap(00002)
00076: Apply
00077:   Return
00078: PushFn(00055, 00003)
00079:   Return
00080: PushFn(00078, 00002)
00081:   Return
00082: PushFn(00016, 00000)
00083: PushString("")
00084: PushString("f")
00085: Swap(00002)
00086: Apply
00087: PushString("acc")
00088: Swap(00002)
00089: Apply
00090: PushString("xs")
00091: Swap(00002)
00092: Apply
00093: Swap(00002)
00094: Apply
00095: PushFn(00080, 00001)
00096: Swap(00002)
00097: Apply
00098:   Return
00099: PushVar(00000)
00100:   Return
00101: PushFn(00099, 00000)
00102:   Return
00103: PushVar(00001)
00104: PushVar(00000)
00105: Swap(00002)
00106: Apply
00107:   Return
00108: PushFn(00103, 00001)
00109:   Return
00110: PushVar(00000)
00111: PushFn(00101, 00000)
00112: PushString("")
00113: PushString("acc")
00114: Swap(00002)
00115: Apply
00116: PushString("x")
00117: Swap(00002)
00118: Apply
00119: Swap(00002)
00120: Apply
00121: PushFn(00108, 00000)
00122: Swap(00002)
00123: Apply
00124: Swap(00002)
00125: Apply
00126: PushString("List")
00127: Swap(00002)
00128: Apply
00129: PushString("List")
00130: PushString("A")
00131: Swap(00002)
00132: Apply
00133: PushString("B")
00134: Swap(00002)
00135: Apply
00136: PushString("C")
00137: Swap(00002)
00138: Apply
00139: Swap(00002)
00140: Apply
00141:   Return
00142: PushFn(00007, 00000)
00143: PushString("fold")
00144: Swap(00002)
00145: Apply
00146: PushFn(00012, 00000)
00147: PushString("fold")
00148: Swap(00002)
00149: Apply
00150: PushFn(00082, 00000)
00151: Swap(00002)
00152: Apply
00153: Swap(00002)
00154: Apply
00155: PushFn(00110, 00000)
00156: Swap(00002)
00157: Apply

List(C, B, A)

---

'zip = ('zip ~> { ('xs, 'ys) => {
    pop(xs, ('xs, 'x) => {
        pop(ys, ('ys, 'y) => {
            'zipped = zip(xs, ys)
            if (zipped, Nil, {
                Nil
            }, {
                zipped((x, y))
            })
        }, {
            Nil
        })
    }, {
        pop(ys, ('ys, 'y) => {
            Nil
        }, {
            if(xs, ys, {
                xs
            }, {
                Nil
            })
        })
    })
}})
List(
    zip(List(X, Y, Z), List(A, B, C))
    zip(List(X, Y), List(A, B, C))
    zip(List(X, Y, Z), List(A, B))
    zip(List(X, Y, Z), Bar)
    zip(Foo, List(A, B, C))
    zip(Foo, Bar)
)

(=
  'zip
  (~>
    'zip
    { (=>
        (
          'xs
          'ys)
        { (pop
            xs
            (=>
              (
                'xs
                'x)
              { (pop
                  ys
                  (=>
                    (
                      'ys
                      'y)
                    { (=
                        'zipped
                        (zip
                          xs
                          ys))
                      (if
                        zipped
                        Nil
                        { Nil }
                        { (zipped
                            (
                              x
                              y)) }) })
                  { Nil }) })
            { (pop
                ys
                (=>
                  (
                    'ys
                    'y)
                  { Nil })
                { (if
                    xs
                    ys
                    { xs }
                    { Nil }) }) }) }) }))
(List
  (zip
    (List
      X
      Y
      Z)
    (List
      A
      B
      C))
  (zip
    (List
      X
      Y)
    (List
      A
      B
      C))
  (zip
    (List
      X
      Y
      Z)
    (List
      A
      B))
  (zip
    (List
      X
      Y
      Z)
    Bar)
  (zip
    Foo
    (List
      A
      B
      C))
  (zip
    Foo
    Bar))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "zip" )
    ( ( =>
          =>
            ~>
              0
        "zip" )
      =>
        ( ( =>
              =>
                0
            ( ( ""
                "xs" )
              "ys" ) )
          =>
            =>
              ( ( ( =>
                      =>
                        =>
                          ( pop
                            2
                            1
                            0 )
                    1 )
                  ( ( =>
                        =>
                          0
                      ( ( ""
                          "xs" )
                        "x" ) )
                    =>
                      =>
                        ( ( ( =>
                                =>
                                  =>
                                    ( pop
                                      2
                                      1
                                      0 )
                              2 )
                            ( ( =>
                                  =>
                                    0
                                ( ( ""
                                    "ys" )
                                  "y" ) )
                              =>
                                =>
                                  ( ( ( =>
                                          =>
                                            =>
                                              ( 0
                                                1 )
                                        "zipped" )
                                      ( ( 6
                                          3 )
                                        1 ) )
                                    =>
                                      ( ( ( ( =>
                                                =>
                                                  =>
                                                    =>
                                                      ( if
                                                        3
                                                        2
                                                        1
                                                        0 )
                                              0 )
                                            "Nil" )
                                          =>
                                            "Nil" )
                                        =>
                                          ( 1
                                            ( ( ""
                                                4 )
                                              2 ) ) ) ) ) )
                          =>
                            "Nil" ) ) )
                =>
                  ( ( ( =>
                          =>
                            =>
                              ( pop
                                2
                                1
                                0 )
                        1 )
                      ( ( =>
                            =>
                              0
                          ( ( ""
                              "ys" )
                            "y" ) )
                        =>
                          =>
                            "Nil" ) )
                    =>
                      ( ( ( ( =>
                                =>
                                  =>
                                    =>
                                      ( if
                                        3
                                        2
                                        1
                                        0 )
                              3 )
                            2 )
                          =>
                            4 )
                        =>
                          "Nil" ) ) ) ) ) )
  =>
    ( ( ( ( ( ( "List"
                ( ( 0
                    ( ( ( "List"
                          "X" )
                        "Y" )
                      "Z" ) )
                  ( ( ( "List"
                        "A" )
                      "B" )
                    "C" ) ) )
              ( ( 0
                  ( ( "List"
                      "X" )
                    "Y" ) )
                ( ( ( "List"
                      "A" )
                    "B" )
                  "C" ) ) )
            ( ( 0
                ( ( ( "List"
                      "X" )
                    "Y" )
                  "Z" ) )
              ( ( "List"
                  "A" )
                "B" ) ) )
          ( ( 0
              ( ( ( "List"
                    "X" )
                  "Y" )
                "Z" ) )
            "Bar" ) )
        ( ( 0
            "Foo" )
          ( ( ( "List"
                "A" )
              "B" )
            "C" ) ) )
      ( ( 0
          "Foo" )
        "Bar" ) ) )

00000: PushVar(00000)
00001: PushVar(00001)
00002: Swap(00002)
00003: Apply
00004:   Return
00005: PushFn(00000, 00001)
00006:   Return
00007: PushFn(00005, 00000)
00008:   Return
00009: PushVar(00000)
00010: Rec
00011:   Return
00012: PushFn(00009, 00000)
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00002)
00019: PushVar(00001)
00020: PushVar(00000)
00021: Swap(00003)
00022: Pop
00023: Apply
00024: Apply
00025:   Return
00026: PushFn(00018, 00002)
00027:   Return
00028: PushFn(00026, 00001)
00029:   Return
00030: PushVar(00000)
00031:   Return
00032: PushFn(00030, 00000)
00033:   Return
00034: PushVar(00002)
00035: PushVar(00001)
00036: PushVar(00000)
00037: Swap(00003)
00038: Pop
00039: Apply
00040: Apply
00041:   Return
00042: PushFn(00034, 00002)
00043:   Return
00044: PushFn(00042, 00001)
00045:   Return
00046: PushVar(00000)
00047:   Return
00048: PushFn(00046, 00000)
00049:   Return
00050: PushVar(00000)
00051: PushVar(00001)
00052: Swap(00002)
00053: Apply
00054:   Return
00055: PushFn(00050, 00001)
00056:   Return
00057: PushFn(00055, 00000)
00058:   Return
00059: PushVar(00003)
00060: PushVar(00002)
00061: PushVar(00001)
00062: PushVar(00000)
00063: Swap(00004)
00064: If
00065: Apply
00066:   Return
00067: PushFn(00059, 00003)
00068:   Return
00069: PushFn(00067, 00002)
00070:   Return
00071: PushFn(00069, 00001)
00072:   Return
00073: PushString("Nil")
00074:   Return
00075: PushVar(00001)
00076: PushString("")
00077: PushVar(00004)
00078: Swap(00002)
00079: Apply
00080: PushVar(00002)
00081: Swap(00002)
00082: Apply
00083: Swap(00002)
00084: Apply
00085:   Return
00086: PushFn(00071, 00000)
00087: PushVar(00000)
00088: Swap(00002)
00089: Apply
00090: PushString("Nil")
00091: Swap(00002)
00092: Apply
00093: PushFn(00073, 00000)
00094: Swap(00002)
00095: Apply
00096: PushFn(00075, 00004)
00097: Swap(00002)
00098: Apply
00099:   Return
00100: PushFn(00057, 00000)
00101: PushString("zipped")
00102: Swap(00002)
00103: Apply
00104: PushVar(00006)
00105: PushVar(00003)
00106: Swap(00002)
00107: Apply
00108: PushVar(00001)
00109: Swap(00002)
00110: Apply
00111: Swap(00002)
00112: Apply
00113: PushFn(00086, 00003)
00114: Swap(00002)
00115: Apply
00116:   Return
00117: PushFn(00100, 00006)
00118:   Return
00119: PushString("Nil")
00120:   Return
00121: PushFn(00044, 00000)
00122: PushVar(00002)
00123: Swap(00002)
00124: Apply
00125: PushFn(00048, 00000)
00126: PushString("")
00127: PushString("ys")
00128: Swap(00002)
00129: Apply
00130: PushString("y")
00131: Swap(00002)
00132: Apply
00133: Swap(00002)
00134: Apply
00135: PushFn(00117, 00005)
00136: Swap(00002)
00137: Apply
00138: Swap(00002)
00139: Apply
00140: PushFn(00119, 00000)
00141: Swap(00002)
00142: Apply
00143:   Return
00144: PushFn(00121, 00004)
00145:   Return
00146: PushVar(00002)
00147: PushVar(00001)
00148: PushVar(00000)
00149: Swap(00003)
00150: Pop
00151: Apply
00152: Apply
00153:   Return
00154: PushFn(00146, 00002)
00155:   Return
00156: PushFn(00154, 00001)
00157:   Return
00158: PushVar(00000)
00159:   Return
00160: PushFn(00158, 00000)
00161:   Return
00162: PushString("Nil")
00163:   Return
00164: PushFn(00162, 00000)
00165:   Return
00166: PushVar(00003)
00167: PushVar(00002)
00168: PushVar(00001)
00169: PushVar(00000)
00170: Swap(00004)
00171: If
00172: Apply
00173:   Return
00174: PushFn(00166, 00003)
00175:   Return
00176: PushFn(00174, 00002)
00177:   Return
00178: PushFn(00176, 00001)
00179:   Return
00180: PushVar(00004)
00181:   Return
00182: PushString("Nil")
00183:   Return
00184: PushFn(00178, 00000)
00185: PushVar(00003)
00186: Swap(00002)
00187: Apply
00188: PushVar(00002)
00189: Swap(00002)
00190: Apply
00191: PushFn(00180, 00004)
00192: Swap(00002)
00193: Apply
00194: PushFn(00182, 00000)
00195: Swap(00002)
00196: Apply
00197:   Return
00198: PushFn(00156, 00000)
00199: PushVar(00001)
00200: Swap(00002)
00201: Apply
00202: PushFn(00160, 00000)
00203: PushString("")
00204: PushString("ys")
00205: Swap(00002)
00206: Apply
00207: PushString("y")
00208: Swap(00002)
00209: Apply
00210: Swap(00002)
00211: Apply
00212: PushFn(00164, 00000)
00213: Swap(00002)
00214: Apply
00215: Swap(00002)
00216: Apply
00217: PushFn(00184, 00003)
00218: Swap(00002)
00219: Apply
00220:   Return
00221: PushFn(00028, 00000)
00222: PushVar(00001)
00223: Swap(00002)
00224: Apply
00225: PushFn(00032, 00000)
00226: PushString("")
00227: PushString("xs")
00228: Swap(00002)
00229: Apply
00230: PushString("x")
00231: Swap(00002)
00232: Apply
00233: Swap(00002)
00234: Apply
00235: PushFn(00144, 00003)
00236: Swap(00002)
00237: Apply
00238: Swap(00002)
00239: Apply
00240: PushFn(00198, 00002)
00241: Swap(00002)
00242: Apply
00243:   Return
00244: PushFn(00221, 00002)
00245:   Return
00246: PushFn(00016, 00000)
00247: PushString("")
00248: PushString("xs")
00249: Swap(00002)
00250: Apply
00251: PushString("ys")
00252: Swap(00002)
00253: Apply
00254: Swap(00002)
00255: Apply
00256: PushFn(00244, 00001)
00257: Swap(00002)
00258: Apply
00259:   Return
00260: PushString("List")
00261: PushVar(00000)
00262: PushString("List")
00263: PushString("X")
00264: Swap(00002)
00265: Apply
00266: PushString("Y")
00267: Swap(00002)
00268: Apply
00269: PushString("Z")
00270: Swap(00002)
00271: Apply
00272: Swap(00002)
00273: Apply
00274: PushString("List")
00275: PushString("A")
00276: Swap(00002)
00277: Apply
00278: PushString("B")
00279: Swap(00002)
00280: Apply
00281: PushString("C")
00282: Swap(00002)
00283: Apply
00284: Swap(00002)
00285: Apply
00286: Swap(00002)
00287: Apply
00288: PushVar(00000)
00289: PushString("List")
00290: PushString("X")
00291: Swap(00002)
00292: Apply
00293: PushString("Y")
00294: Swap(00002)
00295: Apply
00296: Swap(00002)
00297: Apply
00298: PushString("List")
00299: PushString("A")
00300: Swap(00002)
00301: Apply
00302: PushString("B")
00303: Swap(00002)
00304: Apply
00305: PushString("C")
00306: Swap(00002)
00307: Apply
00308: Swap(00002)
00309: Apply
00310: Swap(00002)
00311: Apply
00312: PushVar(00000)
00313: PushString("List")
00314: PushString("X")
00315: Swap(00002)
00316: Apply
00317: PushString("Y")
00318: Swap(00002)
00319: Apply
00320: PushString("Z")
00321: Swap(00002)
00322: Apply
00323: Swap(00002)
00324: Apply
00325: PushString("List")
00326: PushString("A")
00327: Swap(00002)
00328: Apply
00329: PushString("B")
00330: Swap(00002)
00331: Apply
00332: Swap(00002)
00333: Apply
00334: Swap(00002)
00335: Apply
00336: PushVar(00000)
00337: PushString("List")
00338: PushString("X")
00339: Swap(00002)
00340: Apply
00341: PushString("Y")
00342: Swap(00002)
00343: Apply
00344: PushString("Z")
00345: Swap(00002)
00346: Apply
00347: Swap(00002)
00348: Apply
00349: PushString("Bar")
00350: Swap(00002)
00351: Apply
00352: Swap(00002)
00353: Apply
00354: PushVar(00000)
00355: PushString("Foo")
00356: Swap(00002)
00357: Apply
00358: PushString("List")
00359: PushString("A")
00360: Swap(00002)
00361: Apply
00362: PushString("B")
00363: Swap(00002)
00364: Apply
00365: PushString("C")
00366: Swap(00002)
00367: Apply
00368: Swap(00002)
00369: Apply
00370: Swap(00002)
00371: Apply
00372: PushVar(00000)
00373: PushString("Foo")
00374: Swap(00002)
00375: Apply
00376: PushString("Bar")
00377: Swap(00002)
00378: Apply
00379: Swap(00002)
00380: Apply
00381:   Return
00382: PushFn(00007, 00000)
00383: PushString("zip")
00384: Swap(00002)
00385: Apply
00386: PushFn(00012, 00000)
00387: PushString("zip")
00388: Swap(00002)
00389: Apply
00390: PushFn(00246, 00000)
00391: Swap(00002)
00392: Apply
00393: Swap(00002)
00394: Apply
00395: PushFn(00260, 00000)
00396: Swap(00002)
00397: Apply

List(List((X, A), (Y, B), (Z, C)), Nil, Nil, Nil, Nil, Nil)

---

'rev = ('rev ~> { ('acc, 'xs) => {
    pop(xs, ('xs, 'x) => {
        rev(acc(x), xs)
    }, {
        acc
    })
}})
'apply = (('f, 'xs) => { rev(f, rev(List, xs)) })
apply(('x, 'y, 'z) => { List(x, y, z) }, Vec(A, B, C))

(=
  'rev
  (~>
    'rev
    { (=>
        (
          'acc
          'xs)
        { (pop
            xs
            (=>
              (
                'xs
                'x)
              { (rev
                  (acc
                    x)
                  xs) })
            { acc }) }) }))
(=
  'apply
  (=>
    (
      'f
      'xs)
    { (rev
        f
        (rev
          List
          xs)) }))
(apply
  (=>
    (
      'x
      'y
      'z)
    { (List
        x
        y
        z) })
  (Vec
    A
    B
    C))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "rev" )
    ( ( =>
          =>
            ~>
              0
        "rev" )
      =>
        ( ( =>
              =>
                0
            ( ( ""
                "acc" )
              "xs" ) )
          =>
            =>
              ( ( ( =>
                      =>
                        =>
                          ( pop
                            2
                            1
                            0 )
                    0 )
                  ( ( =>
                        =>
                          0
                      ( ( ""
                          "xs" )
                        "x" ) )
                    =>
                      =>
                        ( ( 4
                            ( 3
                              0 ) )
                          1 ) ) )
                =>
                  2 ) ) ) )
  =>
    ( ( ( =>
            =>
              =>
                ( 0
                  1 )
          "apply" )
        ( ( =>
              =>
                0
            ( ( ""
                "f" )
              "xs" ) )
          =>
            =>
              ( ( 2
                  1 )
                ( ( 2
                    "List" )
                  0 ) ) ) )
      =>
        ( ( 0
            ( ( =>
                  =>
                    0
                ( ( ( ""
                      "x" )
                    "y" )
                  "z" ) )
              =>
                =>
                  =>
                    ( ( ( "List"
                          2 )
                        1 )
                      0 ) ) )
          ( ( ( "Vec"
                "A" )
              "B" )
            "C" ) ) ) )

00000: PushVar(00000)
00001: PushVar(00001)
00002: Swap(00002)
00003: Apply
00004:   Return
00005: PushFn(00000, 00001)
00006:   Return
00007: PushFn(00005, 00000)
00008:   Return
00009: PushVar(00000)
00010: Rec
00011:   Return
00012: PushFn(00009, 00000)
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00002)
00019: PushVar(00001)
00020: PushVar(00000)
00021: Swap(00003)
00022: Pop
00023: Apply
00024: Apply
00025:   Return
00026: PushFn(00018, 00002)
00027:   Return
00028: PushFn(00026, 00001)
00029:   Return
00030: PushVar(00000)
00031:   Return
00032: PushFn(00030, 00000)
00033:   Return
00034: PushVar(00004)
00035: PushVar(00003)
00036: PushVar(00000)
00037: Swap(00002)
00038: Apply
00039: Swap(00002)
00040: Apply
00041: PushVar(00001)
00042: Swap(00002)
00043: Apply
00044:   Return
00045: PushFn(00034, 00004)
00046:   Return
00047: PushVar(00002)
00048:   Return
00049: PushFn(00028, 00000)
00050: PushVar(00000)
00051: Swap(00002)
00052: Apply
00053: PushFn(00032, 00000)
00054: PushString("")
00055: PushString("xs")
00056: Swap(00002)
00057: Apply
00058: PushString("x")
00059: Swap(00002)
00060: Apply
00061: Swap(00002)
00062: Apply
00063: PushFn(00045, 00003)
00064: Swap(00002)
00065: Apply
00066: Swap(00002)
00067: Apply
00068: PushFn(00047, 00002)
00069: Swap(00002)
00070: Apply
00071:   Return
00072: PushFn(00049, 00002)
00073:   Return
00074: PushFn(00016, 00000)
00075: PushString("")
00076: PushString("acc")
00077: Swap(00002)
00078: Apply
00079: PushString("xs")
00080: Swap(00002)
00081: Apply
00082: Swap(00002)
00083: Apply
00084: PushFn(00072, 00001)
00085: Swap(00002)
00086: Apply
00087:   Return
00088: PushVar(00000)
00089: PushVar(00001)
00090: Swap(00002)
00091: Apply
00092:   Return
00093: PushFn(00088, 00001)
00094:   Return
00095: PushFn(00093, 00000)
00096:   Return
00097: PushVar(00000)
00098:   Return
00099: PushFn(00097, 00000)
00100:   Return
00101: PushVar(00002)
00102: PushVar(00001)
00103: Swap(00002)
00104: Apply
00105: PushVar(00002)
00106: PushString("List")
00107: Swap(00002)
00108: Apply
00109: PushVar(00000)
00110: Swap(00002)
00111: Apply
00112: Swap(00002)
00113: Apply
00114:   Return
00115: PushFn(00101, 00002)
00116:   Return
00117: PushVar(00000)
00118:   Return
00119: PushFn(00117, 00000)
00120:   Return
00121: PushString("List")
00122: PushVar(00002)
00123: Swap(00002)
00124: Apply
00125: PushVar(00001)
00126: Swap(00002)
00127: Apply
00128: PushVar(00000)
00129: Swap(00002)
00130: Apply
00131:   Return
00132: PushFn(00121, 00002)
00133:   Return
00134: PushFn(00132, 00001)
00135:   Return
00136: PushVar(00000)
00137: PushFn(00119, 00000)
00138: PushString("")
00139: PushString("x")
00140: Swap(00002)
00141: Apply
00142: PushString("y")
00143: Swap(00002)
00144: Apply
00145: PushString("z")
00146: Swap(00002)
00147: Apply
00148: Swap(00002)
00149: Apply
00150: PushFn(00134, 00000)
00151: Swap(00002)
00152: Apply
00153: Swap(00002)
00154: Apply
00155: PushString("Vec")
00156: PushString("A")
00157: Swap(00002)
00158: Apply
00159: PushString("B")
00160: Swap(00002)
00161: Apply
00162: PushString("C")
00163: Swap(00002)
00164: Apply
00165: Swap(00002)
00166: Apply
00167:   Return
00168: PushFn(00095, 00000)
00169: PushString("apply")
00170: Swap(00002)
00171: Apply
00172: PushFn(00099, 00000)
00173: PushString("")
00174: PushString("f")
00175: Swap(00002)
00176: Apply
00177: PushString("xs")
00178: Swap(00002)
00179: Apply
00180: Swap(00002)
00181: Apply
00182: PushFn(00115, 00001)
00183: Swap(00002)
00184: Apply
00185: Swap(00002)
00186: Apply
00187: PushFn(00136, 00000)
00188: Swap(00002)
00189: Apply
00190:   Return
00191: PushFn(00007, 00000)
00192: PushString("rev")
00193: Swap(00002)
00194: Apply
00195: PushFn(00012, 00000)
00196: PushString("rev")
00197: Swap(00002)
00198: Apply
00199: PushFn(00074, 00000)
00200: Swap(00002)
00201: Apply
00202: Swap(00002)
00203: Apply
00204: PushFn(00168, 00000)
00205: Swap(00002)
00206: Apply

List(A, B, C)

---

'last = ('xs => {
    pop(xs, ('_, 'x) => { x }, { xs })
})
'beforelast = ('xs => {
    pop(xs, ('xs, '_) => { last(xs) }, { xs })
})
List(beforelast((X, Y, Z)), last((X, Y, Z)))

(=
  'last
  (=>
    'xs
    { (pop
        xs
        (=>
          (
            '_
            'x)
          { x })
        { xs }) }))
(=
  'beforelast
  (=>
    'xs
    { (pop
        xs
        (=>
          (
            'xs
            '_)
          { (last
              xs) })
        { xs }) }))
(List
  (beforelast
    (
      X
      Y
      Z))
  (last
    (
      X
      Y
      Z)))

( ( ( =>
        =>
          =>
            ( 0
              1 )
      "last" )
    ( ( =>
          =>
            0
        "xs" )
      =>
        ( ( ( =>
                =>
                  =>
                    ( pop
                      2
                      1
                      0 )
              0 )
            ( ( =>
                  =>
                    0
                ( ( ""
                    "_" )
                  "x" ) )
              =>
                =>
                  0 ) )
          =>
            1 ) ) )
  =>
    ( ( ( =>
            =>
              =>
                ( 0
                  1 )
          "beforelast" )
        ( ( =>
              =>
                0
            "xs" )
          =>
            ( ( ( =>
                    =>
                      =>
                        ( pop
                          2
                          1
                          0 )
                  0 )
                ( ( =>
                      =>
                        0
                    ( ( ""
                        "xs" )
                      "_" ) )
                  =>
                    =>
                      ( 3
                        1 ) ) )
              =>
                1 ) ) )
      =>
        ( ( "List"
            ( 0
              ( ( ( ""
                    "X" )
                  "Y" )
                "Z" ) ) )
          ( 1
            ( ( ( ""
                  "X" )
                "Y" )
              "Z" ) ) ) ) )

00000: PushVar(00000)
00001: PushVar(00001)
00002: Swap(00002)
00003: Apply
00004:   Return
00005: PushFn(00000, 00001)
00006:   Return
00007: PushFn(00005, 00000)
00008:   Return
00009: PushVar(00000)
00010:   Return
00011: PushFn(00009, 00000)
00012:   Return
00013: PushVar(00002)
00014: PushVar(00001)
00015: PushVar(00000)
00016: Swap(00003)
00017: Pop
00018: Apply
00019: Apply
00020:   Return
00021: PushFn(00013, 00002)
00022:   Return
00023: PushFn(00021, 00001)
00024:   Return
00025: PushVar(00000)
00026:   Return
00027: PushFn(00025, 00000)
00028:   Return
00029: PushVar(00000)
00030:   Return
00031: PushFn(00029, 00000)
00032:   Return
00033: PushVar(00001)
00034:   Return
00035: PushFn(00023, 00000)
00036: PushVar(00000)
00037: Swap(00002)
00038: Apply
00039: PushFn(00027, 00000)
00040: PushString("")
00041: PushString("_")
00042: Swap(00002)
00043: Apply
00044: PushString("x")
00045: Swap(00002)
00046: Apply
00047: Swap(00002)
00048: Apply
00049: PushFn(00031, 00000)
00050: Swap(00002)
00051: Apply
00052: Swap(00002)
00053: Apply
00054: PushFn(00033, 00001)
00055: Swap(00002)
00056: Apply
00057:   Return
00058: PushVar(00000)
00059: PushVar(00001)
00060: Swap(00002)
00061: Apply
00062:   Return
00063: PushFn(00058, 00001)
00064:   Return
00065: PushFn(00063, 00000)
00066:   Return
00067: PushVar(00000)
00068:   Return
00069: PushFn(00067, 00000)
00070:   Return
00071: PushVar(00002)
00072: PushVar(00001)
00073: PushVar(00000)
00074: Swap(00003)
00075: Pop
00076: Apply
00077: Apply
00078:   Return
00079: PushFn(00071, 00002)
00080:   Return
00081: PushFn(00079, 00001)
00082:   Return
00083: PushVar(00000)
00084:   Return
00085: PushFn(00083, 00000)
00086:   Return
00087: PushVar(00003)
00088: PushVar(00001)
00089: Swap(00002)
00090: Apply
00091:   Return
00092: PushFn(00087, 00003)
00093:   Return
00094: PushVar(00001)
00095:   Return
00096: PushFn(00081, 00000)
00097: PushVar(00000)
00098: Swap(00002)
00099: Apply
00100: PushFn(00085, 00000)
00101: PushString("")
00102: PushString("xs")
00103: Swap(00002)
00104: Apply
00105: PushString("_")
00106: Swap(00002)
00107: Apply
00108: Swap(00002)
00109: Apply
00110: PushFn(00092, 00002)
00111: Swap(00002)
00112: Apply
00113: Swap(00002)
00114: Apply
00115: PushFn(00094, 00001)
00116: Swap(00002)
00117: Apply
00118:   Return
00119: PushString("List")
00120: PushVar(00000)
00121: PushString("")
00122: PushString("X")
00123: Swap(00002)
00124: Apply
00125: PushString("Y")
00126: Swap(00002)
00127: Apply
00128: PushString("Z")
00129: Swap(00002)
00130: Apply
00131: Swap(00002)
00132: Apply
00133: Swap(00002)
00134: Apply
00135: PushVar(00001)
00136: PushString("")
00137: PushString("X")
00138: Swap(00002)
00139: Apply
00140: PushString("Y")
00141: Swap(00002)
00142: Apply
00143: PushString("Z")
00144: Swap(00002)
00145: Apply
00146: Swap(00002)
00147: Apply
00148: Swap(00002)
00149: Apply
00150:   Return
00151: PushFn(00065, 00000)
00152: PushString("beforelast")
00153: Swap(00002)
00154: Apply
00155: PushFn(00069, 00000)
00156: PushString("xs")
00157: Swap(00002)
00158: Apply
00159: PushFn(00096, 00001)
00160: Swap(00002)
00161: Apply
00162: Swap(00002)
00163: Apply
00164: PushFn(00119, 00001)
00165: Swap(00002)
00166: Apply
00167:   Return
00168: PushFn(00007, 00000)
00169: PushString("last")
00170: Swap(00002)
00171: Apply
00172: PushFn(00011, 00000)
00173: PushString("xs")
00174: Swap(00002)
00175: Apply
00176: PushFn(00035, 00000)
00177: Swap(00002)
00178: Apply
00179: Swap(00002)
00180: Apply
00181: PushFn(00151, 00000)
00182: Swap(00002)
00183: Apply

List(Y, Z)