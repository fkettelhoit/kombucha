pop(Foo(Bar, Baz), 'f => { 'x => { x } }, { Error })

(pop
  (Foo
    Bar
    Baz)
  (=>
    'f
    {
      (=>
        'x
        {
          x})})
  {
    Error})

( ( ( =>
        =>
          =>
            ( pop
              2
              1
              0)
      ( ( "Foo"
          "Bar" )
        "Baz" ) )
    ( ( =>
          =>
            0
        "f" )
      =>
        ( ( =>
              =>
                0
            "x" )
          =>
            0 ) ) )
  =>
    "Error" )

-- STRS:
00000 -> Foo
00001 -> Bar
00002 -> Baz
00003 -> f
00004 -> x
00005 -> Error
-- CODE:
00000: PushString("Error")
00001:   Return
00002: PushVar(00000)
00003:   Return
00004: PushVar(00000)
00005:   Return
00006: PushFn(00004, 00000)
00007:   Return
00008: PushFn(00002, 00000)
00009: PushString("x")
00010: PushFn(00006, 00000)
00011: Apply
00012: Apply
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00000)
00019: PushVar(00001)
00020: PushVar(00002)
00021: Pop
00022: Apply
00023: Apply
00024:   Return
00025: PushFn(00018, 00002)
00026:   Return
00027: PushFn(00025, 00001)
00028:   Return
00029: PushFn(00000, 00000)
00030: PushFn(00008, 00000)
00031: PushString("f")
00032: PushFn(00016, 00000)
00033: Apply
00034: Apply
00035: PushString("Baz")
00036: PushString("Bar")
00037: PushString("Foo")
00038: Apply
00039: Apply
00040: PushFn(00027, 00000)
00041: Apply
00042: Apply
00043: Apply

Baz

---

pop(Foo, 'f => { 'x => { x } }, { Error })

(pop
  Foo
  (=>
    'f
    {
      (=>
        'x
        {
          x})})
  {
    Error})

( ( ( =>
        =>
          =>
            ( pop
              2
              1
              0)
      "Foo" )
    ( ( =>
          =>
            0
        "f" )
      =>
        ( ( =>
              =>
                0
            "x" )
          =>
            0 ) ) )
  =>
    "Error" )

-- STRS:
00000 -> Foo
00001 -> f
00002 -> x
00003 -> Error
-- CODE:
00000: PushString("Error")
00001:   Return
00002: PushVar(00000)
00003:   Return
00004: PushVar(00000)
00005:   Return
00006: PushFn(00004, 00000)
00007:   Return
00008: PushFn(00002, 00000)
00009: PushString("x")
00010: PushFn(00006, 00000)
00011: Apply
00012: Apply
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00000)
00019: PushVar(00001)
00020: PushVar(00002)
00021: Pop
00022: Apply
00023: Apply
00024:   Return
00025: PushFn(00018, 00002)
00026:   Return
00027: PushFn(00025, 00001)
00028:   Return
00029: PushFn(00000, 00000)
00030: PushFn(00008, 00000)
00031: PushString("f")
00032: PushFn(00016, 00000)
00033: Apply
00034: Apply
00035: PushString("Foo")
00036: PushFn(00027, 00000)
00037: Apply
00038: Apply
00039: Apply

Error

---

pop(Foo(Bar, Baz), 'f => { 'x => { f } }, { Error })

(pop
  (Foo
    Bar
    Baz)
  (=>
    'f
    {
      (=>
        'x
        {
          f})})
  {
    Error})

( ( ( =>
        =>
          =>
            ( pop
              2
              1
              0)
      ( ( "Foo"
          "Bar" )
        "Baz" ) )
    ( ( =>
          =>
            0
        "f" )
      =>
        ( ( =>
              =>
                0
            "x" )
          =>
            1 ) ) )
  =>
    "Error" )

-- STRS:
00000 -> Foo
00001 -> Bar
00002 -> Baz
00003 -> f
00004 -> x
00005 -> Error
-- CODE:
00000: PushString("Error")
00001:   Return
00002: PushVar(00001)
00003:   Return
00004: PushVar(00000)
00005:   Return
00006: PushFn(00004, 00000)
00007:   Return
00008: PushFn(00002, 00001)
00009: PushString("x")
00010: PushFn(00006, 00000)
00011: Apply
00012: Apply
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00000)
00019: PushVar(00001)
00020: PushVar(00002)
00021: Pop
00022: Apply
00023: Apply
00024:   Return
00025: PushFn(00018, 00002)
00026:   Return
00027: PushFn(00025, 00001)
00028:   Return
00029: PushFn(00000, 00000)
00030: PushFn(00008, 00000)
00031: PushString("f")
00032: PushFn(00016, 00000)
00033: Apply
00034: Apply
00035: PushString("Baz")
00036: PushString("Bar")
00037: PushString("Foo")
00038: Apply
00039: Apply
00040: PushFn(00027, 00000)
00041: Apply
00042: Apply
00043: Apply

Foo(Bar)

---

pop(Foo(Bar), 'f => { 'x => { f } }, { Error })

(pop
  (Foo
    Bar)
  (=>
    'f
    {
      (=>
        'x
        {
          f})})
  {
    Error})

( ( ( =>
        =>
          =>
            ( pop
              2
              1
              0)
      ( "Foo"
        "Bar" ) )
    ( ( =>
          =>
            0
        "f" )
      =>
        ( ( =>
              =>
                0
            "x" )
          =>
            1 ) ) )
  =>
    "Error" )

-- STRS:
00000 -> Foo
00001 -> Bar
00002 -> f
00003 -> x
00004 -> Error
-- CODE:
00000: PushString("Error")
00001:   Return
00002: PushVar(00001)
00003:   Return
00004: PushVar(00000)
00005:   Return
00006: PushFn(00004, 00000)
00007:   Return
00008: PushFn(00002, 00001)
00009: PushString("x")
00010: PushFn(00006, 00000)
00011: Apply
00012: Apply
00013:   Return
00014: PushVar(00000)
00015:   Return
00016: PushFn(00014, 00000)
00017:   Return
00018: PushVar(00000)
00019: PushVar(00001)
00020: PushVar(00002)
00021: Pop
00022: Apply
00023: Apply
00024:   Return
00025: PushFn(00018, 00002)
00026:   Return
00027: PushFn(00025, 00001)
00028:   Return
00029: PushFn(00000, 00000)
00030: PushFn(00008, 00000)
00031: PushString("f")
00032: PushFn(00016, 00000)
00033: Apply
00034: Apply
00035: PushString("Bar")
00036: PushString("Foo")
00037: Apply
00038: PushFn(00027, 00000)
00039: Apply
00040: Apply
00041: Apply

Foo